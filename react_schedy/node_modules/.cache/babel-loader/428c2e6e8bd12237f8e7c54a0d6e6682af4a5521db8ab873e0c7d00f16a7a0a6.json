{"ast":null,"code":"// import React from 'react';\n// import PropTypes from 'prop-types';\n// import UserTable from './userTable';\n\n// function RowTable({ timePosition, weekUser }) {\n//   return (\n//     <tr>\n//       <td>{timePosition[0]}</td>\n//       <td>{timePosition[1]}</td>\n//       <td> <UserTable name={weekUser[0][0]} picture={weekUser[0][1]} /></td>\n//       <td> <UserTable name={weekUser[1][0]} picture={weekUser[1][1]} /></td>\n//       <td> <UserTable name={weekUser[2][0]} picture={weekUser[2][1]} /></td>\n//       <td> <UserTable name={weekUser[3][0]} picture={weekUser[3][1]} /></td>\n//       <td> <UserTable name={weekUser[4][0]} picture={weekUser[4][1]} /></td>\n//       <td> <UserTable name={weekUser[5][0]} picture={weekUser[5][1]} /></td>\n//       <td> <UserTable name={weekUser[6][0]} picture={weekUser[6][1]} /></td>\n//     </tr>\n//   );\n// }\n\n// RowTable.propTypes = {\n//   timePosition: PropTypes.string.isRequired,\n//   weekUser: PropTypes.arrayOf(PropTypes.string).isRequired,\n// };\n\n// export default RowTable;\n\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import UserTable from './userTable';\n\n// function RowTable({ timePosition, weekUser, onEdit }) {\n//   return (\n//     <tr>\n//       {timePosition.map((time, index) => (\n//         <td\n//           key={`time-${index}`}\n//           contentEditable\n//           suppressContentEditableWarning\n//           onBlur={(e) => onEdit(index, 'timePosition', e.target.innerText)}\n//         >\n//           {time}\n//         </td>\n//       ))}\n//       {weekUser.map((user, index) => (\n//         <td key={`user-${index}`}>\n//           <UserTable\n//             name={user[0]}\n//             picture={user[1]}\n//             onEdit={(value) => onEdit(index, 'weekUser', [value, user[1]])}\n//           />\n//         </td>\n//       ))}\n//     </tr>\n//   );\n// }\n\n// RowTable.propTypes = {\n//   timePosition: PropTypes.arrayOf(PropTypes.string).isRequired,\n//   weekUser: PropTypes.arrayOf(PropTypes.array).isRequired,\n//   onEdit: PropTypes.func.isRequired,\n// };\n\n// export default RowTable;\n\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import UserTable from './userTable';\n\n// function RowTable({ rowIndex, timePosition, weekUser, onEdit }) {\n//   return (\n//     <tr>\n//       {timePosition.map((time, index) => (\n//         <td\n//           key={`time-${index}`}\n//           contentEditable\n//           suppressContentEditableWarning\n//           onBlur={(e) => onEdit(index, 'timePosition', e.target.innerText)}\n//         >\n//           {time}\n//         </td>\n//       ))}\n//       {weekUser.map((user, index) => (\n//         <td key={`user-${index}`}>\n//           <UserTable\n//             name={user[0]}\n//             picture={user[1]}\n//             onEdit={(value) => onEdit(index, 'weekUser', value)}\n//           />\n//         </td>\n//       ))}\n//     </tr>\n//   );\n// }\n\n// RowTable.propTypes = {\n//   rowIndex: PropTypes.number.isRequired,\n//   timePosition: PropTypes.arrayOf(PropTypes.string).isRequired,\n//   weekUser: PropTypes.arrayOf(PropTypes.array).isRequired,\n//   onEdit: PropTypes.func.isRequired,\n// };\n\n// export default RowTable;\n\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import UserTable from './userTable';\n\n// function RowTable({ rowIndex, timePosition, weekUser, onEdit }) {\n//   return (\n//     <tr>\n//       {timePosition.map((time, index) => (\n//         <td\n//           key={`time-${index}`}\n//           contentEditable\n//           suppressContentEditableWarning\n//           onBlur={(e) => onEdit(rowIndex, 'timePosition', e.target.innerText)}\n//         >\n//           {time}\n//         </td>\n//       ))}\n//       {weekUser.map((user, index) => (\n//         <td key={`user-${index}`}>\n//           <UserTable\n//             name={user[0]}\n//             picture={user[1]}\n//             position={timePosition[1]} // Pass the position for generating dropdown options\n//             onEdit={(value) => onEdit(rowIndex, index, 'weekUser', value)}\n//           />\n//         </td>\n//       ))}\n//     </tr>\n//   );\n// }\n\n// RowTable.propTypes = {\n//   rowIndex: PropTypes.number.isRequired,\n//   timePosition: PropTypes.arrayOf(PropTypes.string).isRequired,\n//   weekUser: PropTypes.arrayOf(PropTypes.array).isRequired,\n//   onEdit: PropTypes.func.isRequired,\n// };\n\n// export default RowTable;","map":{"version":3,"names":[],"sources":["C:/Users/naama/OneDrive/מסמכים/university/FinalProject/react_schedy/schedy/src/components/rowTable.js"],"sourcesContent":["// import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import UserTable from './userTable';\r\n\r\n// function RowTable({ timePosition, weekUser }) {\r\n//   return (\r\n//     <tr>\r\n//       <td>{timePosition[0]}</td>\r\n//       <td>{timePosition[1]}</td>\r\n//       <td> <UserTable name={weekUser[0][0]} picture={weekUser[0][1]} /></td>\r\n//       <td> <UserTable name={weekUser[1][0]} picture={weekUser[1][1]} /></td>\r\n//       <td> <UserTable name={weekUser[2][0]} picture={weekUser[2][1]} /></td>\r\n//       <td> <UserTable name={weekUser[3][0]} picture={weekUser[3][1]} /></td>\r\n//       <td> <UserTable name={weekUser[4][0]} picture={weekUser[4][1]} /></td>\r\n//       <td> <UserTable name={weekUser[5][0]} picture={weekUser[5][1]} /></td>\r\n//       <td> <UserTable name={weekUser[6][0]} picture={weekUser[6][1]} /></td>\r\n//     </tr>\r\n//   );\r\n// }\r\n\r\n// RowTable.propTypes = {\r\n//   timePosition: PropTypes.string.isRequired,\r\n//   weekUser: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n// };\r\n\r\n// export default RowTable;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import UserTable from './userTable';\r\n\r\n// function RowTable({ timePosition, weekUser, onEdit }) {\r\n//   return (\r\n//     <tr>\r\n//       {timePosition.map((time, index) => (\r\n//         <td\r\n//           key={`time-${index}`}\r\n//           contentEditable\r\n//           suppressContentEditableWarning\r\n//           onBlur={(e) => onEdit(index, 'timePosition', e.target.innerText)}\r\n//         >\r\n//           {time}\r\n//         </td>\r\n//       ))}\r\n//       {weekUser.map((user, index) => (\r\n//         <td key={`user-${index}`}>\r\n//           <UserTable\r\n//             name={user[0]}\r\n//             picture={user[1]}\r\n//             onEdit={(value) => onEdit(index, 'weekUser', [value, user[1]])}\r\n//           />\r\n//         </td>\r\n//       ))}\r\n//     </tr>\r\n//   );\r\n// }\r\n\r\n// RowTable.propTypes = {\r\n//   timePosition: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n//   weekUser: PropTypes.arrayOf(PropTypes.array).isRequired,\r\n//   onEdit: PropTypes.func.isRequired,\r\n// };\r\n\r\n// export default RowTable;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import UserTable from './userTable';\r\n\r\n// function RowTable({ rowIndex, timePosition, weekUser, onEdit }) {\r\n//   return (\r\n//     <tr>\r\n//       {timePosition.map((time, index) => (\r\n//         <td\r\n//           key={`time-${index}`}\r\n//           contentEditable\r\n//           suppressContentEditableWarning\r\n//           onBlur={(e) => onEdit(index, 'timePosition', e.target.innerText)}\r\n//         >\r\n//           {time}\r\n//         </td>\r\n//       ))}\r\n//       {weekUser.map((user, index) => (\r\n//         <td key={`user-${index}`}>\r\n//           <UserTable\r\n//             name={user[0]}\r\n//             picture={user[1]}\r\n//             onEdit={(value) => onEdit(index, 'weekUser', value)}\r\n//           />\r\n//         </td>\r\n//       ))}\r\n//     </tr>\r\n//   );\r\n// }\r\n\r\n// RowTable.propTypes = {\r\n//   rowIndex: PropTypes.number.isRequired,\r\n//   timePosition: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n//   weekUser: PropTypes.arrayOf(PropTypes.array).isRequired,\r\n//   onEdit: PropTypes.func.isRequired,\r\n// };\r\n\r\n// export default RowTable;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import UserTable from './userTable';\r\n\r\n// function RowTable({ rowIndex, timePosition, weekUser, onEdit }) {\r\n//   return (\r\n//     <tr>\r\n//       {timePosition.map((time, index) => (\r\n//         <td\r\n//           key={`time-${index}`}\r\n//           contentEditable\r\n//           suppressContentEditableWarning\r\n//           onBlur={(e) => onEdit(rowIndex, 'timePosition', e.target.innerText)}\r\n//         >\r\n//           {time}\r\n//         </td>\r\n//       ))}\r\n//       {weekUser.map((user, index) => (\r\n//         <td key={`user-${index}`}>\r\n//           <UserTable\r\n//             name={user[0]}\r\n//             picture={user[1]}\r\n//             position={timePosition[1]} // Pass the position for generating dropdown options\r\n//             onEdit={(value) => onEdit(rowIndex, index, 'weekUser', value)}\r\n//           />\r\n//         </td>\r\n//       ))}\r\n//     </tr>\r\n//   );\r\n// }\r\n\r\n// RowTable.propTypes = {\r\n//   rowIndex: PropTypes.number.isRequired,\r\n//   timePosition: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n//   weekUser: PropTypes.arrayOf(PropTypes.array).isRequired,\r\n//   onEdit: PropTypes.func.isRequired,\r\n// };\r\n\r\n// export default RowTable;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAeA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAUA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAaA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// import React, { useState, useRef, useEffect } from 'react';\n// import PropTypes from 'prop-types';\n// import picUser1 from '../pic/user1.png';\n// import picUser2 from '../pic/user2.png';\n// import picUser3 from '../pic/user3.png';\n\n// // Define your user options\n// const userOptions = {\n//   \"service\": [\n//     { name: \"service 1\", picture: picUser1 },\n//     { name: \"service 2\", picture: picUser2 },\n//     { name: \"service 3\", picture: picUser3 }\n//   ],\n//   \"math\": [\n//     { name: \"math 1\", picture: picUser1 },\n//     { name: \"math 2\", picture: picUser2 },\n//     { name: \"math 3\", picture: picUser3 }\n//   ]\n// };\n\n// function UserTableOptions({ name, picture, pos, onEdit }) {\n//   const [isOpen, setIsOpen] = useState(false);\n//   const [selected, setSelected] = useState({ name, picture });\n//   const dropdownRef = useRef(null);\n\n//   const handleSelect = (option) => {\n//     setSelected(option);\n//     onEdit([option.name, option.picture]);\n//     setIsOpen(false);\n//   };\n\n//   useEffect(() => {\n//     const handleClickOutside = (event) => {\n//       if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n//         setIsOpen(false);\n//       }\n//     };\n\n//     document.addEventListener('mousedown', handleClickOutside);\n//     return () => {\n//       document.removeEventListener('mousedown', handleClickOutside);\n//     };\n//   }, []);\n\n//   const generateOptions = () => {\n//     return userOptions[pos].map(option => (\n//       <div key={option.name} className=\"dropdown-option\" onClick={() => handleSelect(option)}>\n//         <div className=\"td-person\">\n//           <span>{option.name}</span>\n//           <img src={option.picture} alt={option.name} />\n//         </div>\n//       </div>\n//     ));\n//   };\n\n//   return (\n//     <div className=\"custom-dropdown\" ref={dropdownRef}>\n//       <div className=\"td-person\" onClick={() => setIsOpen(!isOpen)}>\n//         <span>{selected.name}</span>\n//         <img src={selected.picture} alt={selected.name} />\n//       </div>\n//       {isOpen && (\n//         <div className=\"dropdown-menu\">\n//           {generateOptions()}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// UserTableOptions.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   picture: PropTypes.string.isRequired,\n//   pos: PropTypes.string.isRequired,\n//   onEdit: PropTypes.func.isRequired,\n// };\n\n// export default UserTableOptions;\n\n// import React, { useState, useRef, useEffect } from 'react';\n// import PropTypes from 'prop-types';\n// import picUser1 from '../pic/user1.png';\n// import picUser2 from '../pic/user2.png';\n// import picUser3 from '../pic/user3.png';\n\n// // Define your user options\n// const userOptions = {\n//   \"service\": [\n//     { name: \"service 1\", picture: picUser1 },\n//     { name: \"service 2\", picture: picUser2 },\n//     { name: \"service 3\", picture: picUser3 }\n//   ],\n//   \"math\": [\n//     { name: \"math 1\", picture: picUser1 },\n//     { name: \"math 2\", picture: picUser2 },\n//     { name: \"math 3\", picture: picUser3 }\n//   ]\n// };\n\n// function UserTableOptions({ name, picture, pos, onEdit }) {\n//   const [isOpen, setIsOpen] = useState(false);\n//   const [selected, setSelected] = useState({ name, picture });\n//   const dropdownRef = useRef(null);\n\n//   const handleSelect = (option) => {\n//     setSelected(option);\n//     onEdit([option.name, option.picture]);\n//     setIsOpen(false);\n//   };\n\n//   useEffect(() => {\n//     const handleClickOutside = (event) => {\n//       if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n//         setIsOpen(false);\n//       }\n//     };\n\n//     document.addEventListener('mousedown', handleClickOutside);\n//     return () => {\n//       document.removeEventListener('mousedown', handleClickOutside);\n//     };\n//   }, []);\n\n//   const generateOptions = () => {\n//     return userOptions[pos].map(option => (\n//       <div key={option.name} className=\"dropdown-option\" onClick={() => handleSelect(option)}>\n//         <div className=\"td-person\">\n//           <span>{option.name}</span>\n//           <img src={option.picture} alt={option.name} />\n//         </div>\n//       </div>\n//     ));\n//   };\n\n//   return (\n//     <div className=\"custom-dropdown\" ref={dropdownRef}>\n//       <div className=\"td-person\" onClick={() => setIsOpen(!isOpen)}>\n//         <span>{selected.name || ''}</span>\n//         {selected.picture ? (\n//           <img src={selected.picture} alt={selected.name} />\n//         ) : null}\n//       </div>\n//       {isOpen && (\n//         <div className=\"dropdown-menu\">\n//           {generateOptions()}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// UserTableOptions.propTypes = {\n//   name: PropTypes.string,\n//   picture: PropTypes.string,\n//   pos: PropTypes.string.isRequired,\n//   onEdit: PropTypes.func.isRequired,\n// };\n\n// export default UserTableOptions;","map":{"version":3,"names":[],"sources":["C:/Users/naama/OneDrive/מסמכים/university/FinalProject/react_schedy/schedy/src/components/userTableOptions.js"],"sourcesContent":["// import React, { useState, useRef, useEffect } from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import picUser1 from '../pic/user1.png';\r\n// import picUser2 from '../pic/user2.png';\r\n// import picUser3 from '../pic/user3.png';\r\n\r\n// // Define your user options\r\n// const userOptions = {\r\n//   \"service\": [\r\n//     { name: \"service 1\", picture: picUser1 },\r\n//     { name: \"service 2\", picture: picUser2 },\r\n//     { name: \"service 3\", picture: picUser3 }\r\n//   ],\r\n//   \"math\": [\r\n//     { name: \"math 1\", picture: picUser1 },\r\n//     { name: \"math 2\", picture: picUser2 },\r\n//     { name: \"math 3\", picture: picUser3 }\r\n//   ]\r\n// };\r\n\r\n// function UserTableOptions({ name, picture, pos, onEdit }) {\r\n//   const [isOpen, setIsOpen] = useState(false);\r\n//   const [selected, setSelected] = useState({ name, picture });\r\n//   const dropdownRef = useRef(null);\r\n\r\n//   const handleSelect = (option) => {\r\n//     setSelected(option);\r\n//     onEdit([option.name, option.picture]);\r\n//     setIsOpen(false);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const handleClickOutside = (event) => {\r\n//       if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n//         setIsOpen(false);\r\n//       }\r\n//     };\r\n\r\n//     document.addEventListener('mousedown', handleClickOutside);\r\n//     return () => {\r\n//       document.removeEventListener('mousedown', handleClickOutside);\r\n//     };\r\n//   }, []);\r\n\r\n//   const generateOptions = () => {\r\n//     return userOptions[pos].map(option => (\r\n//       <div key={option.name} className=\"dropdown-option\" onClick={() => handleSelect(option)}>\r\n//         <div className=\"td-person\">\r\n//           <span>{option.name}</span>\r\n//           <img src={option.picture} alt={option.name} />\r\n//         </div>\r\n//       </div>\r\n//     ));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"custom-dropdown\" ref={dropdownRef}>\r\n//       <div className=\"td-person\" onClick={() => setIsOpen(!isOpen)}>\r\n//         <span>{selected.name}</span>\r\n//         <img src={selected.picture} alt={selected.name} />\r\n//       </div>\r\n//       {isOpen && (\r\n//         <div className=\"dropdown-menu\">\r\n//           {generateOptions()}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// UserTableOptions.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   picture: PropTypes.string.isRequired,\r\n//   pos: PropTypes.string.isRequired,\r\n//   onEdit: PropTypes.func.isRequired,\r\n// };\r\n\r\n// export default UserTableOptions;\r\n\r\n\r\n\r\n// import React, { useState, useRef, useEffect } from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import picUser1 from '../pic/user1.png';\r\n// import picUser2 from '../pic/user2.png';\r\n// import picUser3 from '../pic/user3.png';\r\n\r\n// // Define your user options\r\n// const userOptions = {\r\n//   \"service\": [\r\n//     { name: \"service 1\", picture: picUser1 },\r\n//     { name: \"service 2\", picture: picUser2 },\r\n//     { name: \"service 3\", picture: picUser3 }\r\n//   ],\r\n//   \"math\": [\r\n//     { name: \"math 1\", picture: picUser1 },\r\n//     { name: \"math 2\", picture: picUser2 },\r\n//     { name: \"math 3\", picture: picUser3 }\r\n//   ]\r\n// };\r\n\r\n// function UserTableOptions({ name, picture, pos, onEdit }) {\r\n//   const [isOpen, setIsOpen] = useState(false);\r\n//   const [selected, setSelected] = useState({ name, picture });\r\n//   const dropdownRef = useRef(null);\r\n\r\n//   const handleSelect = (option) => {\r\n//     setSelected(option);\r\n//     onEdit([option.name, option.picture]);\r\n//     setIsOpen(false);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const handleClickOutside = (event) => {\r\n//       if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n//         setIsOpen(false);\r\n//       }\r\n//     };\r\n\r\n//     document.addEventListener('mousedown', handleClickOutside);\r\n//     return () => {\r\n//       document.removeEventListener('mousedown', handleClickOutside);\r\n//     };\r\n//   }, []);\r\n\r\n//   const generateOptions = () => {\r\n//     return userOptions[pos].map(option => (\r\n//       <div key={option.name} className=\"dropdown-option\" onClick={() => handleSelect(option)}>\r\n//         <div className=\"td-person\">\r\n//           <span>{option.name}</span>\r\n//           <img src={option.picture} alt={option.name} />\r\n//         </div>\r\n//       </div>\r\n//     ));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"custom-dropdown\" ref={dropdownRef}>\r\n//       <div className=\"td-person\" onClick={() => setIsOpen(!isOpen)}>\r\n//         <span>{selected.name || ''}</span>\r\n//         {selected.picture ? (\r\n//           <img src={selected.picture} alt={selected.name} />\r\n//         ) : null}\r\n//       </div>\r\n//       {isOpen && (\r\n//         <div className=\"dropdown-menu\">\r\n//           {generateOptions()}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// UserTableOptions.propTypes = {\r\n//   name: PropTypes.string,\r\n//   picture: PropTypes.string,\r\n//   pos: PropTypes.string.isRequired,\r\n//   onEdit: PropTypes.func.isRequired,\r\n// };\r\n\r\n// export default UserTableOptions;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
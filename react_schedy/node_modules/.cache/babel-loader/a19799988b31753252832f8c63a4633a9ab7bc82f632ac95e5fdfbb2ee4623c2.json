{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naama\\\\OneDrive\\\\\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD\\\\university\\\\FinalProject\\\\react_schedy\\\\schedy\\\\src\\\\components\\\\userTable.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import PropTypes from 'prop-types';\n\n// function UserTable({ name, picture }) {\n//   if (!name || !picture) {\n//     return null;\n//   }\n\n//   return (\n//     <div className=\"td-person\">\n//       <img src={picture} alt={`${name}`} />\n//       <span>{name}</span>\n//     </div>\n//   );\n// }\n\n// UserTable.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   picture: PropTypes.string.isRequired,\n// };\n\n// export default UserTable;\n\n// import React from 'react';\n// import PropTypes from 'prop-types';\n\n// function UserTable({ name, picture, onEdit }) {\n//   if (!name || !picture) {\n//     return null;\n//   }\n\n//   return (\n//     <div className=\"td-person\">\n//       <span\n//         contentEditable\n//         suppressContentEditableWarning\n//         onBlur={(e) => onEdit(e.target.innerText)}\n//       >\n//         {name}\n//       </span>\n//       <img src={picture} alt={`${name}`} />\n//     </div>\n//   );\n// }\n\n// UserTable.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   picture: PropTypes.string.isRequired,\n//   onEdit: PropTypes.func.isRequired,\n// };\n\n// export default UserTable;\n\n// import React, { useState } from 'react';\n// import PropTypes from 'prop-types';\n\n// function UserTable({ name, picture, onEdit }) {\n//   const [isEditing, setIsEditing] = useState(false);\n\n//   const handleSelectChange = (e) => {\n//     onEdit(e.target.value);\n//     setIsEditing(false);\n//   };\n\n//   if (isEditing) {\n//     return (\n//       <select onChange={handleSelectChange} value={name}>\n//         <option value=\"mosh1\">mosh1</option>\n//         <option value=\"mosh2\">mosh2</option>\n//         <option value=\"mosh3\">mosh3</option>\n//       </select>\n//     );\n//   }\n\n//   return (\n//     <div className=\"td-person\" onClick={() => setIsEditing(true)}>\n//       <span>{name}</span>\n//       <img src={picture} alt={name} />\n//     </div>\n//   );\n// }\n\n// UserTable.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   picture: PropTypes.string.isRequired,\n//   onEdit: PropTypes.func.isRequired,\n// };\n\n// export default UserTable;\n\n// import React, { useState } from 'react';\n// import PropTypes from 'prop-types';\n\n// function UserTable({ name, picture, position, onEdit }) {\n//   const [isEditing, setIsEditing] = useState(false);\n\n//   const handleSelectChange = (e) => {\n//     onEdit(e.target.value);\n//     setIsEditing(false);\n//   };\n\n//   const generateOptions = () => {\n//     return (\n//       <>\n//         <option value={`${position}1`}>{`${position}1`}</option>\n//         <option value={`${position}2`}>{`${position}2`}</option>\n//         <option value={`${position}3`}>{`${position}3`}</option>\n//       </>\n//     );\n//   };\n\n//   if (isEditing) {\n//     return (\n//       <select onChange={handleSelectChange} value={name}>\n//         {generateOptions()}\n//       </select>\n//     );\n//   }\n\n//   return (\n//     <div className=\"td-person\" onClick={() => setIsEditing(true)}>\n//       <span>{name}</span>\n//       <img src={picture} alt={name} />\n//     </div>\n//   );\n// }\n\n// UserTable.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   picture: PropTypes.string.isRequired,\n//   position: PropTypes.string.isRequired,\n//   onEdit: PropTypes.func.isRequired,\n// };\n\n// export default UserTable;\n\n// import React, { useState } from 'react';\n// import PropTypes from 'prop-types';\n// import picUser1 from '../pic/user1.png';\n// import picUser2 from '../pic/user2.png';\n// import picUser3 from '../pic/user3.png';\n\n// // Add your custom options here\n// const userOptions = {\n//   \"service\": [\n//     { name: \"service 1\", picture: picUser1 },\n//     { name: \"service 2\", picture: picUser2 },\n//     { name: \"service 3\", picture: picUser3 }\n//   ],\n//   // Add other positions as needed\n//   \"math\": [\n//     { name: \"math 1\", picture: picUser1 },\n//     { name: \"math 2\", picture: picUser2 },\n//     { name: \"math 3\", picture: picUser3 }\n//   ]\n// };\n\n// function UserTable({ name, picture, position, onEdit }) {\n//   const [isEditing, setIsEditing] = useState(false);\n\n//   const handleSelectChange = (e) => {\n//     const selectedOption = userOptions[position].find(option => option.name === e.target.value);\n//     onEdit([selectedOption.name, selectedOption.picture]);\n//     setIsEditing(false);\n//   };\n\n//   const generateOptions = () => {\n//     return userOptions[position].map(option => (\n//       <option key={option.name} value={option.name}>\n//         {option.name}\n//       </option>\n//     ));\n//   };\n\n//   if (isEditing) {\n//     return (\n//       <select onChange={handleSelectChange} value={name}>\n//         {generateOptions()}\n//       </select>\n//     );\n//   }\n\n//   return (\n//     <div className=\"td-person\" onClick={() => setIsEditing(true)}>\n//       <span>{name}</span>\n//       <img src={picture} alt={name} />\n//     </div>\n//   );\n// }\n\n// UserTable.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   picture: PropTypes.string.isRequired,\n//   position: PropTypes.string.isRequired,\n//   onEdit: PropTypes.func.isRequired,\n// };\n\n// export default UserTable;\n\n// import React, { useState } from 'react';\n// import PropTypes from 'prop-types';\n// import picUser1 from '../pic/user1.png';\n// import picUser2 from '../pic/user2.png';\n// import picUser3 from '../pic/user3.png';\n\n// // Add your custom options here\n// const userOptions = {\n//   \"service\": [\n//     { name: \"service 1\", picture: picUser1 },\n//     { name: \"service 2\", picture: picUser2 },\n//     { name: \"service 3\", picture: picUser3 }\n//   ],\n//   // Add other positions as needed\n//   \"math\": [\n//     { name: \"math 1\", picture: picUser1 },\n//     { name: \"math 2\", picture: picUser2 },\n//     { name: \"math 3\", picture: picUser3 }\n//   ]\n// };\n\n// function UserTable({ name, picture, position, onEdit }) {\n//   const [isEditing, setIsEditing] = useState(false);\n\n//   const handleSelectChange = (e) => {\n//     const selectedOption = userOptions[position].find(option => option.name === e.target.value);\n//     onEdit([selectedOption.name, selectedOption.picture]);\n//     setIsEditing(false);\n//   };\n\n//   const generateOptions = () => {\n//     if (!userOptions[position]) {\n//       return (\n//         <>\n//           <option value=\"\">No options available</option>\n//         </>\n//       );\n//     }\n\n//     return userOptions[position].map(option => (\n//       <option key={option.name} value={option.name}>\n//         {option.name}\n//       </option>\n//     ));\n//   };\n\n//   if (isEditing) {\n//     return (\n//       <select onChange={handleSelectChange} value={name}>\n//         {generateOptions()}\n//       </select>\n//     );\n//   }\n\n//   return (\n//     <div className=\"td-person\" onClick={() => setIsEditing(true)}>\n//       <span>{name}</span>\n//       <img src={picture} alt={name} />\n//     </div>\n//   );\n// }\n\n// UserTable.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   picture: PropTypes.string.isRequired,\n//   position: PropTypes.string.isRequired,\n//   onEdit: PropTypes.func.isRequired,\n// };\n\n// export default UserTable;\n\n// import React, { useState } from 'react';\n// import PropTypes from 'prop-types';\n// import picUser1 from '../pic/user1.png';\n// import picUser2 from '../pic/user2.png';\n// import picUser3 from '../pic/user3.png';\n\n// // Add your custom options here\n// const userOptions = {\n//   \"service\": [\n//     { name: \"service 1\", picture: picUser1 },\n//     { name: \"service 2\", picture: picUser2 },\n//     { name: \"service 3\", picture: picUser3 }\n//   ],\n//   // Add other positions as needed\n//   \"math\": [\n//     { name: \"math 1\", picture: picUser1 },\n//     { name: \"math 2\", picture: picUser2 },\n//     { name: \"math 3\", picture: picUser3 }\n//   ]\n// };\n\n// function UserTable({ name, picture, position, onEdit }) {\n//   const [isEditing, setIsEditing] = useState(false);\n\n//   const handleSelectChange = (e) => {\n//     const selectedOption = userOptions[position].find(option => option.name === e.target.value);\n//     onEdit([selectedOption.name, selectedOption.picture]);\n//     setIsEditing(false);\n//   };\n\n//   const generateOptions = () => {\n//     if (!userOptions[position]) {\n//       return (\n//         <>\n//           <option value=\"\">No options available</option>\n//         </>\n//       );\n//     }\n\n//     return userOptions[position].map(option => (\n//       <option key={option.name} value={option.name}>\n//         {option.name}\n//       </option>\n//     ));\n//   };\n\n//   if (isEditing) {\n//     return (\n//       <select onChange={handleSelectChange} value={name}>\n//         {generateOptions()}\n//       </select>\n//     );\n//   }\n\n//   return (\n//     <div className=\"td-person\" onClick={() => setIsEditing(true)}>\n//       <span>{name}</span>\n//       <img src={picture} alt={name} />\n//     </div>\n//   );\n// }\n\n// UserTable.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   picture: PropTypes.string.isRequired,\n//   position: PropTypes.string.isRequired,\n//   onEdit: PropTypes.func.isRequired,\n// };\n\n// export default UserTable;\n\n//\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport picUser1 from '../pic/user1.png';\nimport picUser2 from '../pic/user2.png';\nimport picUser3 from '../pic/user3.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userOptions = {\n  \"service\": [{\n    name: \"service 1\",\n    picture: picUser1\n  }, {\n    name: \"service 2\",\n    picture: picUser2\n  }, {\n    name: \"service 3\",\n    picture: picUser3\n  }],\n  \"math\": [{\n    name: \"math 1\",\n    picture: picUser1\n  }, {\n    name: \"math 2\",\n    picture: picUser2\n  }, {\n    name: \"math 3\",\n    picture: picUser3\n  }]\n};\nfunction UserTable({\n  name,\n  picture,\n  pos,\n  onEdit\n}) {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const handleSelectChange = e => {\n    const selectedOption = userOptions[pos].find(option => option.name === e.target.value);\n    onEdit([selectedOption.name, selectedOption.picture]);\n    setIsEditing(false);\n  };\n  const generateOptions = () => {\n    return userOptions[pos].map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option.name,\n      children: option.name\n    }, option.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this));\n  };\n  if (isEditing) {\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleSelectChange,\n      value: name,\n      children: generateOptions()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"td-person\",\n    onClick: () => setIsEditing(true),\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: picture,\n      alt: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 471,\n    columnNumber: 5\n  }, this);\n}\n_s(UserTable, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n_c = UserTable;\nUserTable.propTypes = {\n  name: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  pos: PropTypes.string.isRequired,\n  onEdit: PropTypes.func.isRequired\n};\nexport default UserTable;\nvar _c;\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"names":["React","useState","PropTypes","picUser1","picUser2","picUser3","jsxDEV","_jsxDEV","userOptions","name","picture","UserTable","pos","onEdit","_s","isEditing","setIsEditing","handleSelectChange","e","selectedOption","find","option","target","value","generateOptions","map","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","className","onClick","src","alt","_c","propTypes","string","isRequired","func","$RefreshReg$"],"sources":["C:/Users/naama/OneDrive/מסמכים/university/FinalProject/react_schedy/schedy/src/components/userTable.js"],"sourcesContent":["// import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\n// function UserTable({ name, picture }) {\r\n//   if (!name || !picture) {\r\n//     return null;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"td-person\">\r\n//       <img src={picture} alt={`${name}`} />\r\n//       <span>{name}</span>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// UserTable.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   picture: PropTypes.string.isRequired,\r\n// };\r\n\r\n// export default UserTable;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\n// function UserTable({ name, picture, onEdit }) {\r\n//   if (!name || !picture) {\r\n//     return null;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"td-person\">\r\n//       <span\r\n//         contentEditable\r\n//         suppressContentEditableWarning\r\n//         onBlur={(e) => onEdit(e.target.innerText)}\r\n//       >\r\n//         {name}\r\n//       </span>\r\n//       <img src={picture} alt={`${name}`} />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// UserTable.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   picture: PropTypes.string.isRequired,\r\n//   onEdit: PropTypes.func.isRequired,\r\n// };\r\n\r\n// export default UserTable;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\n// function UserTable({ name, picture, onEdit }) {\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n\r\n//   const handleSelectChange = (e) => {\r\n//     onEdit(e.target.value);\r\n//     setIsEditing(false);\r\n//   };\r\n\r\n//   if (isEditing) {\r\n//     return (\r\n//       <select onChange={handleSelectChange} value={name}>\r\n//         <option value=\"mosh1\">mosh1</option>\r\n//         <option value=\"mosh2\">mosh2</option>\r\n//         <option value=\"mosh3\">mosh3</option>\r\n//       </select>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"td-person\" onClick={() => setIsEditing(true)}>\r\n//       <span>{name}</span>\r\n//       <img src={picture} alt={name} />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// UserTable.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   picture: PropTypes.string.isRequired,\r\n//   onEdit: PropTypes.func.isRequired,\r\n// };\r\n\r\n// export default UserTable;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\n// function UserTable({ name, picture, position, onEdit }) {\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n\r\n//   const handleSelectChange = (e) => {\r\n//     onEdit(e.target.value);\r\n//     setIsEditing(false);\r\n//   };\r\n\r\n//   const generateOptions = () => {\r\n//     return (\r\n//       <>\r\n//         <option value={`${position}1`}>{`${position}1`}</option>\r\n//         <option value={`${position}2`}>{`${position}2`}</option>\r\n//         <option value={`${position}3`}>{`${position}3`}</option>\r\n//       </>\r\n//     );\r\n//   };\r\n\r\n//   if (isEditing) {\r\n//     return (\r\n//       <select onChange={handleSelectChange} value={name}>\r\n//         {generateOptions()}\r\n//       </select>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"td-person\" onClick={() => setIsEditing(true)}>\r\n//       <span>{name}</span>\r\n//       <img src={picture} alt={name} />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// UserTable.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   picture: PropTypes.string.isRequired,\r\n//   position: PropTypes.string.isRequired,\r\n//   onEdit: PropTypes.func.isRequired,\r\n// };\r\n\r\n// export default UserTable;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import picUser1 from '../pic/user1.png';\r\n// import picUser2 from '../pic/user2.png';\r\n// import picUser3 from '../pic/user3.png';\r\n\r\n// // Add your custom options here\r\n// const userOptions = {\r\n//   \"service\": [\r\n//     { name: \"service 1\", picture: picUser1 },\r\n//     { name: \"service 2\", picture: picUser2 },\r\n//     { name: \"service 3\", picture: picUser3 }\r\n//   ],\r\n//   // Add other positions as needed\r\n//   \"math\": [\r\n//     { name: \"math 1\", picture: picUser1 },\r\n//     { name: \"math 2\", picture: picUser2 },\r\n//     { name: \"math 3\", picture: picUser3 }\r\n//   ]\r\n// };\r\n\r\n// function UserTable({ name, picture, position, onEdit }) {\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n\r\n//   const handleSelectChange = (e) => {\r\n//     const selectedOption = userOptions[position].find(option => option.name === e.target.value);\r\n//     onEdit([selectedOption.name, selectedOption.picture]);\r\n//     setIsEditing(false);\r\n//   };\r\n\r\n//   const generateOptions = () => {\r\n//     return userOptions[position].map(option => (\r\n//       <option key={option.name} value={option.name}>\r\n//         {option.name}\r\n//       </option>\r\n//     ));\r\n//   };\r\n\r\n//   if (isEditing) {\r\n//     return (\r\n//       <select onChange={handleSelectChange} value={name}>\r\n//         {generateOptions()}\r\n//       </select>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"td-person\" onClick={() => setIsEditing(true)}>\r\n//       <span>{name}</span>\r\n//       <img src={picture} alt={name} />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// UserTable.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   picture: PropTypes.string.isRequired,\r\n//   position: PropTypes.string.isRequired,\r\n//   onEdit: PropTypes.func.isRequired,\r\n// };\r\n\r\n// export default UserTable;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import picUser1 from '../pic/user1.png';\r\n// import picUser2 from '../pic/user2.png';\r\n// import picUser3 from '../pic/user3.png';\r\n\r\n// // Add your custom options here\r\n// const userOptions = {\r\n//   \"service\": [\r\n//     { name: \"service 1\", picture: picUser1 },\r\n//     { name: \"service 2\", picture: picUser2 },\r\n//     { name: \"service 3\", picture: picUser3 }\r\n//   ],\r\n//   // Add other positions as needed\r\n//   \"math\": [\r\n//     { name: \"math 1\", picture: picUser1 },\r\n//     { name: \"math 2\", picture: picUser2 },\r\n//     { name: \"math 3\", picture: picUser3 }\r\n//   ]\r\n// };\r\n\r\n// function UserTable({ name, picture, position, onEdit }) {\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n\r\n//   const handleSelectChange = (e) => {\r\n//     const selectedOption = userOptions[position].find(option => option.name === e.target.value);\r\n//     onEdit([selectedOption.name, selectedOption.picture]);\r\n//     setIsEditing(false);\r\n//   };\r\n\r\n//   const generateOptions = () => {\r\n//     if (!userOptions[position]) {\r\n//       return (\r\n//         <>\r\n//           <option value=\"\">No options available</option>\r\n//         </>\r\n//       );\r\n//     }\r\n\r\n//     return userOptions[position].map(option => (\r\n//       <option key={option.name} value={option.name}>\r\n//         {option.name}\r\n//       </option>\r\n//     ));\r\n//   };\r\n\r\n//   if (isEditing) {\r\n//     return (\r\n//       <select onChange={handleSelectChange} value={name}>\r\n//         {generateOptions()}\r\n//       </select>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"td-person\" onClick={() => setIsEditing(true)}>\r\n//       <span>{name}</span>\r\n//       <img src={picture} alt={name} />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// UserTable.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   picture: PropTypes.string.isRequired,\r\n//   position: PropTypes.string.isRequired,\r\n//   onEdit: PropTypes.func.isRequired,\r\n// };\r\n\r\n// export default UserTable;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import picUser1 from '../pic/user1.png';\r\n// import picUser2 from '../pic/user2.png';\r\n// import picUser3 from '../pic/user3.png';\r\n\r\n// // Add your custom options here\r\n// const userOptions = {\r\n//   \"service\": [\r\n//     { name: \"service 1\", picture: picUser1 },\r\n//     { name: \"service 2\", picture: picUser2 },\r\n//     { name: \"service 3\", picture: picUser3 }\r\n//   ],\r\n//   // Add other positions as needed\r\n//   \"math\": [\r\n//     { name: \"math 1\", picture: picUser1 },\r\n//     { name: \"math 2\", picture: picUser2 },\r\n//     { name: \"math 3\", picture: picUser3 }\r\n//   ]\r\n// };\r\n\r\n// function UserTable({ name, picture, position, onEdit }) {\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n\r\n//   const handleSelectChange = (e) => {\r\n//     const selectedOption = userOptions[position].find(option => option.name === e.target.value);\r\n//     onEdit([selectedOption.name, selectedOption.picture]);\r\n//     setIsEditing(false);\r\n//   };\r\n\r\n//   const generateOptions = () => {\r\n//     if (!userOptions[position]) {\r\n//       return (\r\n//         <>\r\n//           <option value=\"\">No options available</option>\r\n//         </>\r\n//       );\r\n//     }\r\n\r\n//     return userOptions[position].map(option => (\r\n//       <option key={option.name} value={option.name}>\r\n//         {option.name}\r\n//       </option>\r\n//     ));\r\n//   };\r\n\r\n//   if (isEditing) {\r\n//     return (\r\n//       <select onChange={handleSelectChange} value={name}>\r\n//         {generateOptions()}\r\n//       </select>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"td-person\" onClick={() => setIsEditing(true)}>\r\n//       <span>{name}</span>\r\n//       <img src={picture} alt={name} />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// UserTable.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   picture: PropTypes.string.isRequired,\r\n//   position: PropTypes.string.isRequired,\r\n//   onEdit: PropTypes.func.isRequired,\r\n// };\r\n\r\n// export default UserTable;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport picUser1 from '../pic/user1.png';\r\nimport picUser2 from '../pic/user2.png';\r\nimport picUser3 from '../pic/user3.png';\r\n\r\nconst userOptions = {\r\n  \"service\": [\r\n    { name: \"service 1\", picture: picUser1 },\r\n    { name: \"service 2\", picture: picUser2 },\r\n    { name: \"service 3\", picture: picUser3 }\r\n  ],\r\n  \"math\": [\r\n    { name: \"math 1\", picture: picUser1 },\r\n    { name: \"math 2\", picture: picUser2 },\r\n    { name: \"math 3\", picture: picUser3 }\r\n  ]\r\n};\r\n\r\nfunction UserTable({ name, picture, pos, onEdit }) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const handleSelectChange = (e) => {\r\n    const selectedOption = userOptions[pos].find(option => option.name === e.target.value);\r\n    onEdit([selectedOption.name, selectedOption.picture]);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const generateOptions = () => {\r\n    return userOptions[pos].map(option => (\r\n      <option key={option.name} value={option.name}>\r\n        {option.name}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  if (isEditing) {\r\n    return (\r\n      <select onChange={handleSelectChange} value={name}>\r\n        {generateOptions()}\r\n      </select>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"td-person\" onClick={() => setIsEditing(true)}>\r\n      <span>{name}</span>\r\n      <img src={picture} alt={name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nUserTable.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  picture: PropTypes.string.isRequired,\r\n  pos: PropTypes.string.isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default UserTable;\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAOA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAYA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAOA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAmBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAuBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAUA;AACA;AACA;AACA;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}